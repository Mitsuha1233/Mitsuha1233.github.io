{"meta":{"title":"Mitsuha","subtitle":null,"description":"好少年光芒万丈","author":"Mitsuha","url":""},"pages":[{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-02-14T09:11:23.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-02-14T09:11:23.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"8BBC连接","date":"2020-06-16T12:18:50.879Z","updated":"2020-06-16T13:05:07.199Z","comments":true,"path":"2020/06/16/8BBC连接/","link":"","permalink":"/2020/06/16/8BBC连接/","excerpt":"","text":"title: BBC连接date: 2020-04-15 11:49:27tags: 如何连接BBC设备？一、预备环境操作系统需要win10 1703以上版本 插入BBC板子，将.hex文件直接拖到BBC板子里 当再次插拔BBC板子，发现.hex文件消失了，这是正常现象。 二、网页连接BBC板输入如下代码 function discoverDevices() { console.log(&quot;discoverDevices&quot;); var options = {acceptallDevices:true} //发现所有周边蓝牙设备 navigator.bluetooth.requestDevice(options) .then(device =&gt; { console.log(&#39;&gt; Name:&#39; + device.name); console.log(&#39;&gt; Id:&#39; + device.id); console.log(&#39;&gt; Connected:&#39; + device.gatt.connected); selected_device = device; console.log(selected_device); connect(); }) .catch(error =&gt; { alert(&#39;ERROR&#39; +error); console.log(&#39;ERROR&#39; +error); }); } &lt;h2&gt; Device Discovery or Disconnect &lt;/h2&gt; &lt;button id = &quot;btn_scan&quot; onclick=&quot;discoverDevices()&quot;&gt;Start scan&lt;/button&gt; function connect() { console.log(“connecting”); selected_device.gatt.connect() .then( function (server) { console.log(“Connected to” + server.device.id); console.log(“Connected “ + server.connected); selected_device.addEventListener(‘gattserverdisconnected’,onDisconnected); connected_server =server; setConnectedStatus(true); }, function (error) { console.log(“ERROR:could not connct-“ + error); alert(“ERROR:could not connct-“ + error); setConnectedStatus(false); } ); } 三、将代码用谷歌浏览器打开点击connect连接 在出现的蓝牙设备中选择自己的BBC板子 板子出现 C 就表示连接成功了 四、断开蓝牙设备在原有代码加上下面代码 &lt;h2&gt; Status &lt;/h2&gt; &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;td&gt; &lt;b&gt;Connected&lt;/b&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td id=&quot;status_connected&quot;&gt; false &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;hr&gt; &lt;h2&gt; function discoverOrdisconnectDevices() { console.log(&quot;discoverOrdisconnectDevices&quot;); if(!connected) discoverDevices(); else { selected_device.gatt.disconnect(); } } connect()函数加上如下代码 function connect() { console.log(&quot;connecting&quot;); selected_device.gatt.connect() .then( function (server) { console.log(&quot;Connected to&quot; + server.device.id); console.log(&quot;Connected &quot; + server.connected); selected_device.addEventListener(&#39;gattserverdisconnected&#39;,onDisconnected);// 1 connected_server =server; setConnectedStatus(true); // 2 }, function (error) { console.log(&quot;ERROR:could not connct-&quot; + error); alert(&quot;ERROR:could not connct-&quot; + error); setConnectedStatus(false); // 3 } ); } function onDisconnected() { console.log(&quot;onDisconnected&quot;); resetUI(); } setConnectedStatus()函数如下 function setConnectedStatus(status) { connected=status; document.getElementById(&#39;status_connected&#39;).innerHTML = status; if(status==true) { document.getElementById(&#39;btn_scan&#39;).innerHTML = &quot;Disconnect&quot;; } else { document.getElementById(&#39;btn_scan&#39;).innerHTML = &quot;Discover Devices&quot;; } } 在网页连接BBC板子成功后点击disconnect就可以与板子断开连接了。","categories":[],"tags":[],"keywords":[]},{"title":"朝暮 认真的学会儿习","slug":"1朝暮","date":"2020-04-15T03:49:27.000Z","updated":"2020-04-15T09:15:40.185Z","comments":true,"path":"2020/04/15/1朝暮/","link":"","permalink":"/2020/04/15/1朝暮/","excerpt":"","text":"","categories":[],"tags":[],"keywords":[]},{"title":"连接BBC","slug":"7评论系统","date":"2020-04-10T03:49:27.000Z","updated":"2020-06-16T13:06:31.405Z","comments":true,"path":"2020/04/10/7评论系统/","link":"","permalink":"/2020/04/10/7评论系统/","excerpt":"","text":"一、预备环境操作系统需要win10 1703以上版本 插入BBC板子，将.hex文件直接拖到BBC板子里 当再次插拔BBC板子，发现.hex文件消失了，这是正常现象。 二、网页连接BBC板输入如下代码 function discoverDevices() { console.log(&quot;discoverDevices&quot;); var options = {acceptallDevices:true} //发现所有周边蓝牙设备 navigator.bluetooth.requestDevice(options) .then(device =&gt; { console.log(&#39;&gt; Name:&#39; + device.name); console.log(&#39;&gt; Id:&#39; + device.id); console.log(&#39;&gt; Connected:&#39; + device.gatt.connected); selected_device = device; console.log(selected_device); connect(); }) .catch(error =&gt; { alert(&#39;ERROR&#39; +error); console.log(&#39;ERROR&#39; +error); }); } &lt;h2&gt; Device Discovery or Disconnect &lt;/h2&gt; &lt;button id = &quot;btn_scan&quot; onclick=&quot;discoverDevices()&quot;&gt;Start scan&lt;/button&gt; function connect() { console.log(“connecting”); selected_device.gatt.connect() .then( function (server) { console.log(“Connected to” + server.device.id); console.log(“Connected “ + server.connected); selected_device.addEventListener(‘gattserverdisconnected’,onDisconnected); connected_server =server; setConnectedStatus(true); }, function (error) { console.log(“ERROR:could not connct-“ + error); alert(“ERROR:could not connct-“ + error); setConnectedStatus(false); } ); } 三、将代码用谷歌浏览器打开点击connect连接 在出现的蓝牙设备中选择自己的BBC板子 板子出现 C 就表示连接成功了 四、断开蓝牙设备在原有代码加上下面代码 &lt;h2&gt; Status &lt;/h2&gt; &lt;table border=&quot;1&quot;&gt; &lt;tr&gt; &lt;td&gt; &lt;b&gt;Connected&lt;/b&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td id=&quot;status_connected&quot;&gt; false &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;hr&gt; &lt;h2&gt; function discoverOrdisconnectDevices() { console.log(&quot;discoverOrdisconnectDevices&quot;); if(!connected) discoverDevices(); else { selected_device.gatt.disconnect(); } } connect()函数加上如下代码 function connect() { console.log(&quot;connecting&quot;); selected_device.gatt.connect() .then( function (server) { console.log(&quot;Connected to&quot; + server.device.id); console.log(&quot;Connected &quot; + server.connected); selected_device.addEventListener(&#39;gattserverdisconnected&#39;,onDisconnected);// 1 connected_server =server; setConnectedStatus(true); // 2 }, function (error) { console.log(&quot;ERROR:could not connct-&quot; + error); alert(&quot;ERROR:could not connct-&quot; + error); setConnectedStatus(false); // 3 } ); } function onDisconnected() { console.log(&quot;onDisconnected&quot;); resetUI(); } setConnectedStatus()函数如下 function setConnectedStatus(status) { connected=status; document.getElementById(&#39;status_connected&#39;).innerHTML = status; if(status==true) { document.getElementById(&#39;btn_scan&#39;).innerHTML = &quot;Disconnect&quot;; } else { document.getElementById(&#39;btn_scan&#39;).innerHTML = &quot;Discover Devices&quot;; } } 在网页连接BBC板子成功后点击disconnect就可以与板子断开连接了。","categories":[],"tags":[],"keywords":[]},{"title":"发布文章","slug":"6发布文章","date":"2020-04-09T03:49:27.000Z","updated":"2020-04-15T09:14:37.661Z","comments":true,"path":"2020/04/09/6发布文章/","link":"","permalink":"/2020/04/09/6发布文章/","excerpt":"","text":"1.创建文章执行语句 hexo new “（可随意命名）” 创建好的文章在Blog文件夹下/source/_posts中 2.语法编辑安装Typora 以后就可以用这个软件编辑文章了 3.部署（所有打开CMD都是在blog目录下）hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo generate #生成hexo server #启动服务预览，非必要，可本地浏览网页hexo deploy #部署发布","categories":[],"tags":[],"keywords":[]},{"title":"本地Blog迁移至Github及常见问题","slug":"5本地上传至G","date":"2020-04-08T03:49:27.000Z","updated":"2020-04-15T09:14:25.386Z","comments":true,"path":"2020/04/08/5本地上传至G/","link":"","permalink":"/2020/04/08/5本地上传至G/","excerpt":"","text":"输入指令：hexo d这个指令将会把本地Blog文件夹里的所有文件上传至Github 如果看到有https://username.github.io出现 说明大功告成 常见问题出错之一deploy not found： git 解决方案：执行 npm install hexo-deployer-git –save 语句即可 出错之二fatal: unable to access ‘https://username:password@github.com/username/username.github.io.git/&#39;: SSL certificate problem: unable to get local issuer certificateFATAL Something’s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: fatal: unable to access ‘https://username:password@github.com/username/username.github.io.git/&#39;: SSL certificate problem: unable to get local issuer certificate at ChildProcess. (D:\\test\\blog2\\node_modules\\hexo-util\\lib\\spawn.js:37:17) at emitTwo (events.js:106:13) at ChildProcess.emit (events.js:191:7) at ChildProcess.cp.emit (D:\\test\\blog2\\node_modules\\cross-spawn\\lib\\enoent.js:40:29) at maybeClose (internal/child_process.js:920:16) 解决方案：执行语句：git config –global http.sslVerify false","categories":[],"tags":[],"keywords":[]},{"title":"Hexo与Github关联","slug":"4关联本地Github","date":"2020-04-07T03:49:27.000Z","updated":"2020-04-15T09:14:13.133Z","comments":true,"path":"2020/04/07/4关联本地Github/","link":"","permalink":"/2020/04/07/4关联本地Github/","excerpt":"","text":"1.绑定Hexo和Github打开blog文件夹中的_config.yml文件 将最后一部分改为 deploy: type: git repo: git@github.com:username/username.github.io.git branch: master 2.关联Hexo和Github–SSH密钥鼠标右键空白位置 点击git bash 在弹出的窗口中输入如下指令 ssh-keygen -t rsa 一路回车 这样便会在你的计算机中生成SSH密钥 SSH密钥在与blog同一文件夹中的.ssh文件夹中 进入.ssh文件夹点击id_rsa.pub文件（用记事本打开即可） 复制文件中的内容 进入Github 3.安装关联工具在blog文件夹下单机右键 点击git bash 在弹出来的命令框里面输入如下指令 npm install hexo-deployer-git –save","categories":[],"tags":[],"keywords":[]},{"title":"Github搭建","slug":"3Github注册","date":"2020-04-06T03:49:27.000Z","updated":"2020-04-15T09:13:57.875Z","comments":true,"path":"2020/04/06/3Github注册/","link":"","permalink":"/2020/04/06/3Github注册/","excerpt":"","text":"1.登录Github官网2.注册Github账号点击左上角Sing up 填写欲建的用户名、电子邮箱、密码 这里选择Free 在注册时填的电子邮箱里确认Github发来的电子邮件 3.新建仓库仓库名填写username.github.io其中username是你注册Github使用的用户名。 点击Creat repository","categories":[],"tags":[],"keywords":[]},{"title":"Hexo本地搭建","slug":"2本地搭建","date":"2020-04-05T03:49:27.000Z","updated":"2020-04-15T09:13:36.021Z","comments":true,"path":"2020/04/05/2本地搭建/","link":"","permalink":"/2020/04/05/2本地搭建/","excerpt":"","text":"1.准备工作 安装 Node.js (到官网安装适合自己系统的版本即可) 安装Git (到官网安装适合自己系统的版本即可) 2.安装Hexo在CMD窗口使用下面的命令 npm install hexo-cli -g 3.搭建本地博客Hexo根目录创建在cmd输入如下指令 md blog 初始化Hexo博客在cmd输入如下指令（首先cmd需进入blog文件夹，进入指令：cd blog) hexo init 4.本地预览在cmd输入如下指令 hexo s","categories":[],"tags":[],"keywords":[]}]}